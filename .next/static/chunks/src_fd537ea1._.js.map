{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sonis/Desktop/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,IAAA,0KAAG,EACvB;AAGF,MAAM,sBAAQ,2KAAgB,MAI5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,4KAAmB;QAClB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;;AAGb,MAAM,WAAW,GAAG,4KAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sonis/Desktop/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sonis/Desktop/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,2KAAgB,MAC/B,QAAwB;QAAvB,EAAC,SAAS,EAAE,GAAG,OAAM;IACpB,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sonis/Desktop/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,2KAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,2KAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,2KAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sonis/Desktop/studio/src/ai/flows/generate-content-with-ai.ts"],"sourcesContent":["// src/ai/flows/generate-content-with-ai.ts\n'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for generating story content using AI.\n *\n * It includes:\n * - generateContentWithAI - A function to generate story content based on a text prompt.\n * - GenerateContentWithAIInput - The input type for the generateContentWithAI function.\n * - GenerateContentWithAIOutput - The output type for the generateContentWithAI function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateContentWithAIInputSchema = z.object({\n  prompt: z.string().describe('A prompt describing the desired story content.'),\n});\n\nexport type GenerateContentWithAIInput = z.infer<typeof GenerateContentWithAIInputSchema>;\n\nconst GenerateContentWithAIOutputSchema = z.object({\n  content: z.string().describe('The AI-generated story content.'),\n});\n\nexport type GenerateContentWithAIOutput = z.infer<typeof GenerateContentWithAIOutputSchema>;\n\nexport async function generateContentWithAI(input: GenerateContentWithAIInput): Promise<GenerateContentWithAIOutput> {\n  return generateContentWithAIFlow(input);\n}\n\nconst generateContentPrompt = ai.definePrompt({\n  name: 'generateContentPrompt',\n  input: {schema: GenerateContentWithAIInputSchema},\n  output: {schema: GenerateContentWithAIOutputSchema},\n  prompt: `Generate a story based on the following prompt:\\n\\n{{{prompt}}}`, \n});\n\nconst generateContentWithAIFlow = ai.defineFlow(\n  {\n    name: 'generateContentWithAIFlow',\n    inputSchema: GenerateContentWithAIInputSchema,\n    outputSchema: GenerateContentWithAIOutputSchema,\n  },\n  async input => {\n    const {output} = await generateContentPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;;IA2BsB,wBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sonis/Desktop/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,2KAAgB,MAG5B,QAAmC;QAAlC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO;yBACjC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,2KAAgB,OAGvC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 538, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sonis/Desktop/studio/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,2KAAgB,MAIhC,QAEE;QADA,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO;yBAGtE,6LAAC,gLAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,IAAA,4HAAE,EACX,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;;AAIf,UAAU,WAAW,GAAG,gLAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sonis/Desktop/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;;AAAA;;;AAEA,SAAS,SAAS,KAGqB;QAHrB,EAChB,SAAS,EACT,GAAG,OACkC,GAHrB;IAIhB,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EAAC,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sonis/Desktop/studio/src/app/create-ai/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { useWallet } from '@/contexts/wallet-context';\nimport { useNftStore } from '@/hooks/use-nft-store';\nimport { useRouter } from 'next/navigation';\nimport { useToast } from '@/hooks/use-toast';\nimport { useState } from 'react';\nimport { generateContentWithAI } from '@/ai/flows/generate-content-with-ai';\nimport { Loader2, Sparkles, Wallet } from 'lucide-react';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Separator } from '@/components/ui/separator';\nimport { Skeleton } from '@/components/ui/skeleton';\n\nconst generationSchema = z.object({\n  prompt: z.string().min(10, 'Prompt must be at least 10 characters.'),\n});\n\nconst mintingSchema = z.object({\n  title: z.string().min(3, 'Title is required.'),\n  description: z.string().min(10, 'Description is required.'),\n});\n\nexport default function CreateWithAiPage() {\n  const router = useRouter();\n  const { isConnected, walletAddress, connectWallet } = useWallet();\n  const { addNft } = useNftStore();\n  const { toast } = useToast();\n  const [generatedContent, setGeneratedContent] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n\n  const generationForm = useForm<z.infer<typeof generationSchema>>({\n    resolver: zodResolver(generationSchema),\n    defaultValues: { prompt: '' },\n  });\n\n  const mintingForm = useForm<z.infer<typeof mintingSchema>>({\n    resolver: zodResolver(mintingSchema),\n    defaultValues: { title: '', description: '' },\n  });\n\n  async function onGenerate(values: z.infer<typeof generationSchema>) {\n    setIsGenerating(true);\n    setGeneratedContent('');\n    try {\n      const result = await generateContentWithAI({ prompt: values.prompt });\n      setGeneratedContent(result.content);\n      mintingForm.setValue('title', 'AI-Generated Story');\n      mintingForm.setValue('description', `A story generated from the prompt: \"${values.prompt.substring(0, 50)}...\"`);\n    } catch (error) {\n      console.error(error);\n      toast({\n        title: 'Generation Failed',\n        description: 'Could not generate content. Please try again.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsGenerating(false);\n    }\n  }\n\n  function onMint(values: z.infer<typeof mintingSchema>) {\n    if (!isConnected || !walletAddress) {\n      toast({ title: 'Wallet not connected', variant: 'destructive' });\n      return;\n    }\n    if (!generatedContent) {\n      toast({ title: 'No content to mint', variant: 'destructive' });\n      return;\n    }\n    const newNft = addNft({\n      ...values,\n      content: generatedContent,\n      owner: walletAddress,\n    });\n    toast({\n      title: 'NFT Deployed Successfully!',\n      description: `Your AI creation \"${newNft.title}\" is now on the NFT marketplace.`,\n    });\n    router.push(`/nft/${newNft.hash}`);\n  }\n\n  return (\n    <div className=\"container mx-auto max-w-2xl px-4 py-8\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"font-headline text-3xl flex items-center gap-2\">\n            <Sparkles className=\"text-primary\" /> Create with AI\n          </CardTitle>\n          <CardDescription>Use AI to generate a unique story or poem, then mint it as an NFT.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-8\">\n          <Form {...generationForm}>\n            <form onSubmit={generationForm.handleSubmit(onGenerate)} className=\"space-y-4\">\n              <FormField\n                control={generationForm.control}\n                name=\"prompt\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Your Prompt</FormLabel>\n                    <FormControl>\n                      <Textarea placeholder=\"e.g., A space pirate who discovers a map to a legendary treasure...\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <Button type=\"submit\" disabled={isGenerating}>\n                {isGenerating && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                Generate Content\n              </Button>\n            </form>\n          </Form>\n\n          {(isGenerating || generatedContent) && (\n            <>\n              <Separator />\n              <div>\n                <h3 className=\"font-headline text-2xl mb-4\">Generated Content</h3>\n                {isGenerating && <Skeleton className=\"h-40 w-full\" />}\n                {generatedContent && (\n                  <Card className=\"bg-secondary p-4 whitespace-pre-wrap font-body text-sm\">\n                    {generatedContent}\n                  </Card>\n                )}\n              </div>\n            </>\n          )}\n\n          {generatedContent && (\n            <>\n              <Separator />\n              <div>\n                <h3 className=\"font-headline text-2xl mb-4\">Mint Your AI Creation</h3>\n                {!isConnected ? (\n                  <Alert>\n                    <Wallet className=\"h-4 w-4\" />\n                    <AlertTitle>Connect Your Wallet to Mint</AlertTitle>\n                    <Button onClick={connectWallet} className=\"mt-4 w-full\">Connect Wallet</Button>\n                  </Alert>\n                ) : (\n                  <Form {...mintingForm}>\n                    <form onSubmit={mintingForm.handleSubmit(onMint)} className=\"space-y-4\">\n                      <FormField\n                        control={mintingForm.control}\n                        name=\"title\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Title</FormLabel>\n                            <FormControl><Input {...field} /></FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      <FormField\n                        control={mintingForm.control}\n                        name=\"description\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Description</FormLabel>\n                            <FormControl><Textarea {...field} /></FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      <Button type=\"submit\" className=\"w-full\" size=\"lg\">Mint This Creation</Button>\n                    </form>\n                  </Form>\n                )}\n              </div>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}